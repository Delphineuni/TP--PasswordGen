name: test

on:
  [push]

env:
  PYTEST_ADDOPTS: "--color=yes"

# Cancel running jobs for the same workflow and branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Set permissions at the job level.
permissions: {}

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false
    - name: Build and Check Package
      uses: hynek/build-and-inspect-python-package@v2.4.0

  build:
    needs: [package]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    permissions:
      contents: read

    strategy:
      fail-fast: false
      matrix:
        name: [
          "windows-py39",
          "windows-py310",
          "ubuntu-py39",
          "ubuntu-py310",
          "doctesting",
          "plugins",
        ]

        include:
           - name: "windows-py39"
             python: "3.9"
             os: windows-latest
             tox_env: "py39-xdist"
             use_coverage: true
           - name: "windows-py310"
             python: "3.10"
             os: windows-latest
             tox_env: "py310-xdist"

           - name: "ubuntu-py39"
             python: "3.9"
             os: ubuntu-latest
             tox_env: "py39-xdist"
             use_coverage: true
           - name: "ubuntu-py310"
             python: "3.10"
             os: ubuntu-latest
             tox_env: "py310-xdist"

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Download Package
      uses: actions/download-artifact@v4
      with:
        name: Packages
        path: dist

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
        check-latest: ${{ endsWith(matrix.python, '-dev') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox coverage

    - name: Test without coverage
      if: ! matrix.use_coverage
      shell: bash
      run: tox run -e ${{ matrix.tox_env }} --installpkg `find dist/*.tar.gz`

    - name: Test with coverage
      if: "matrix.use_coverage"
      shell: bash
      run: tox run -e ${{ matrix.tox_env }}-coverage --installpkg `find dist/*.tar.gz`

    - name: Generate coverage report
      if: "matrix.use_coverage"
      run: python -m coverage xml

    - name: Upload coverage to Codecov
      if: "matrix.use_coverage"
      uses: codecov/codecov-action@v4
      continue-on-error: true
      with:
        fail_ci_if_error: true
        files: ./coverage.xml
        verbose: true